坐旋转字符串:
汇编语言中有一种移位指令叫做循环左移（ROL），现在有个简单的任务，就是用字符串模拟这个指令的运算结果。对于一个给定的字符序列S，
请你把其循环左移K位后的序列输出。例如，字符序列S=”abcXYZdef”,要求输出循环左移3位后的结果，即“XYZdefabc”。是不是很简单？

Solution1:
function LeftRotateString(str, n)
{
    // write code here
    if(!str || n<0 || n>str.length){
        return '';
    }
    var strarray = str.split('');
    var rtnarray = strarray.splice(0,n);
    var rtn = strarray.concat(rtnarray);
    return rtn.join('');
}
module.exports = {
    LeftRotateString : LeftRotateString
};

Solution2:(这个方法比较好)
function LeftRotateString(str, n)
{
    // write code here
    if(!str || n<0 || n>str.length){
        return '';
    }
    var len = str.length;
    str += str;
    return str.slice(n,n+len);
}
module.exports = {
    LeftRotateString : LeftRotateString
};