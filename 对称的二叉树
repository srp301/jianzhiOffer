对称的二叉树：
请实现一个函数，用来判断一颗二叉树是不是对称的。注意，如果一个二叉树同此二叉树的镜像是同样的，定义其为对称的。

分析：
	对称二叉树  首先根节点以及其左右子树，左子树的左子树和右子树的右子树。
    左子树的右子树和右子树的左子树相同即可，采用递归法。

Solution:
function TreeNode(x) {
    this.val = x;
    this.left = null;
    this.right = null;
}
function isSymmetrical(pRoot)
{
    // write code here
    if(!pRoot){
        return true;
    }
    function isequeal(left,right){
        if(left==null && right==null){
            return true;
        }
        if(left!=null && right!=null){
            if(left.val != right.val){
                return false;
            }else{
                return isequeal(left.left,right.right) && isequeal(left.right,right.left);
            }
        }
    }
    return isequeal(pRoot.left,pRoot.right);
}
module.exports = {
    isSymmetrical : isSymmetrical
};