平衡二叉树：
输入一棵二叉树，判断该二叉树是否是平衡二叉树。

分析：
	首先普及一下平衡二叉树：
	平衡二叉树（Self-balancing binary search tree）又被称为AVL树（有别于AVL算法），且具有以下性质：它是一 
	棵空树或它的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树(摘自百度百科)。

	采用后序遍历。后续遍历时，遍历到一个节点，其左右子树已经遍历  依次自底向上判断，每个节点只需要遍历一次。

Solution:
/* function TreeNode(x) {
    this.val = x;
    this.left = null;
    this.right = null;
} */
function IsBalanced_Solution(pRoot)
{
    // write code here
    var isBalanced = true;
    getDepth(pRoot);
    function getDepth(pRoot){
        if(!pRoot){
            return 0;
        }
        var left = getDepth(pRoot.left);
        var right = getDepth(pRoot.right);
        var diff = left - right;
        if(diff > 1 || diff < -1){
            isBalanced = false;
        }
        return left > right ? (left+1) : (right+1);
    }
    return isBalanced;
}
module.exports = {
    IsBalanced_Solution : IsBalanced_Solution
};